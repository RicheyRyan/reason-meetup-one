// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Encoder$ReactTemplate = require("../Shared/Encoder.bs.js");
var Questions$ReactTemplate = require("./Questions.bs.js");

function returnQuiz() {
  return Encoder$ReactTemplate.quiz(Questions$ReactTemplate.quiz);
}

function isAnswerCorrect(param) {
  return Caml_obj.caml_equal(param[0], param[1]);
}

function getCorrectAnswers() {
  return Belt_List.map(Questions$ReactTemplate.quiz, (function (q) {
                var match = q[/* correctAnswer */2];
                if (match !== undefined) {
                  return match;
                } else {
                  return Pervasives.failwith("Answers are missing!");
                }
              }));
}

function getNumCorrectAnswers(correctAnswers, answers) {
  var combined = Belt_List.zip(correctAnswers, answers);
  return Belt_List.reduce(combined, 0, (function (correct, answers) {
                var match = isAnswerCorrect(answers);
                if (match) {
                  return correct + 1 | 0;
                } else {
                  return correct;
                }
              }));
}

function calculateScore(answers) {
  var correctAnswers = getCorrectAnswers(/* () */0);
  var numCorrect = getNumCorrectAnswers(correctAnswers, answers);
  return /* record */[
          /* numCorrect */numCorrect,
          /* totalQuestions */List.length(Questions$ReactTemplate.quiz)
        ];
}

exports.returnQuiz = returnQuiz;
exports.isAnswerCorrect = isAnswerCorrect;
exports.getCorrectAnswers = getCorrectAnswers;
exports.getNumCorrectAnswers = getNumCorrectAnswers;
exports.calculateScore = calculateScore;
/* Encoder-ReactTemplate Not a pure module */
